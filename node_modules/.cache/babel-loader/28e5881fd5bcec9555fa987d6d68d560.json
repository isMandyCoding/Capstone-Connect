{"remainingRequest":"/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/Capstone-Connect/node_modules/babel-loader/lib/index.js!/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/Capstone-Connect/node_modules/eslint-loader/index.js??ref--13-0!/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/Capstone-Connect/src/store/modules/projects.js","dependencies":[{"path":"/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/Capstone-Connect/src/store/modules/projects.js","mtime":1529614010735},{"path":"/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/Capstone-Connect/node_modules/cache-loader/dist/cjs.js","mtime":1528441485530},{"path":"/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/Capstone-Connect/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/Capstone-Connect/node_modules/eslint-loader/index.js","mtime":1519638534000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/Capstone-Connect/node_modules/@babel/runtime/helpers/builtin/es6/asyncToGenerator\";\nimport api from '../../api/imgur';\nimport qs from 'qs';\nimport { router } from '../../main';\nimport axios from 'axios';\nvar state = {\n  projects: [],\n  project_page: null,\n  requested_info: [],\n  bookmarked: [],\n  committed: null\n};\nvar getters = {\n  AllProjects: function AllProjects(state) {\n    return state.projects;\n  },\n  AllOpenProjects: function AllOpenProjects(state) {\n    return state.projects;\n  },\n  getNewProject: function getNewProject(state) {\n    return state.newProject;\n  }\n};\nvar mutations = {\n  setProjects: function setProjects(state, projects) {\n    state.projects = projects;\n  },\n  addProject: function addProject(state, newProject) {\n    state.projects.push(newProject);\n  },\n  setProjectPage: function setProjectPage(state, project) {\n    state.project_page = project;\n  },\n  clear_new_project: function clear_new_project(state) {\n    state.newProject = null;\n  }\n};\nvar actions = {\n  fetchAllProjects: function () {\n    var _fetchAllProjects = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref) {\n      var rootState, commit, token, response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              rootState = _ref.rootState, commit = _ref.commit;\n              token = rootState.auth.token;\n              _context.next = 4;\n              return axios.get('http://localhost:8000/admin/projects').then(function (res) {\n                commit('setProjects', res.data);\n              }).catch(function (err) {\n                return console.log(err);\n              });\n\n            case 4:\n              response = _context.sent;\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function fetchAllProjects(_x) {\n      return _fetchAllProjects.apply(this, arguments);\n    };\n  }(),\n  getProjectById: function () {\n    var _getProjectById = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(_ref2, id) {\n      var commit, state, response;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit, state = _ref2.state;\n              _context2.next = 3;\n              return axios.get(\"http://localhost:8000/projects/\".concat(id)).then(function (res) {\n                console.log('store res', res[0]);\n                commit('setProjectPage', res.data[0]);\n              }).catch(function (err) {\n                return console.log(err);\n              });\n\n            case 3:\n              response = _context2.sent;\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    return function getProjectById(_x2, _x3) {\n      return _getProjectById.apply(this, arguments);\n    };\n  }(),\n  addNewProject: function addNewProject(_ref3, newProject) {\n    var commit = _ref3.commit,\n        state = _ref3.state;\n    axios.post('http://localhost:8000/admin/new_project', newProject).then(function () {\n      commit('addProject', newProject);\n    });\n  },\n  fetchAllOpenProjects: function () {\n    var _fetchAllOpenProjects = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(_ref4) {\n      var rootState, commit, response;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              rootState = _ref4.rootState, commit = _ref4.commit;\n              _context3.next = 3;\n              return axios('http://localhost:8000/student/projects').then(function (res) {\n                commit('setProjects', res.data);\n              }).catch(function (err) {\n                return console.log(err);\n              });\n\n            case 3:\n              response = _context3.sent;\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    return function fetchAllOpenProjects(_x4) {\n      return _fetchAllOpenProjects.apply(this, arguments);\n    };\n  }(),\n  filterByRole: function filterByRole(_ref5, role) {\n    var rootState = _ref5.rootState,\n        commit = _ref5.commit;\n    var filtered = rootState.projects.projects.filter(function (ele) {\n      return ele.role_type.indexOf(role) !== -1;\n    });\n    commit('setProjects', filtered);\n  },\n  filterById: function filterById(_ref6, id) {\n    var rootState = _ref6.rootState,\n        commit = _ref6.commit;\n    var project = rootState.projects.projects.filter(function (ele) {\n      return ele.project_id === id;\n    })[0];\n    console.log('filtering for ', project);\n    commit('setCurrentProject', project);\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["src/store/modules/projects.js"],"names":["api","qs","router","axios","state","projects","project_page","requested_info","bookmarked","committed","getters","AllProjects","AllOpenProjects","getNewProject","newProject","mutations","setProjects","addProject","push","setProjectPage","project","clear_new_project","actions","fetchAllProjects","rootState","commit","token","auth","get","then","res","data","catch","console","log","err","response","getProjectById","id","addNewProject","post","fetchAllOpenProjects","filterByRole","role","filtered","filter","ele","role_type","indexOf","filterById","project_id"],"mappings":"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","sourceRoot":"/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/Capstone-Connect","sourcesContent":["import api from '../../api/imgur';\nimport qs from 'qs';\nimport { router } from '../../main';\nimport axios from 'axios';\n\n\nconst state = {\n  projects: [],\n  project_page: null,\n  requested_info: [],\n  bookmarked: [],\n  committed: null\n};\n\nconst getters = {\n    AllProjects: function (state) {\n      return state.projects;\n    },\n    AllOpenProjects: function (state) {\n      return state.projects;\n    },\n    getNewProject: state => state.newProject\n};\n\nconst mutations = {\n  setProjects: (state, projects) => {\n     state.projects = projects;\n  },\n  addProject: (state, newProject)=> {\n    state.projects.push(newProject);\n  },\n  setProjectPage: (state, project)=> {\n    state.project_page = project;\n\n  },\n  clear_new_project: (state) => {\n    state.newProject = null;\n  }\n};\n\nconst actions = {\n  async fetchAllProjects ({ rootState, commit }) {\n     const { token } = rootState.auth;\n     const response = await axios.get('http://localhost:8000/admin/projects')\n     .then(res => {\n       commit('setProjects', res.data)\n     })\n     .catch(err => console.log(err));\n\n  },\n\n  async getProjectById ({ commit, state }, id){\n    const response = await axios.get(`http://localhost:8000/projects/${id}`)\n    .then(res => {\n      console.log('store res', res[0])\n      commit('setProjectPage', res.data[0]);\n    })\n    .catch(err => console.log(err));\n  },\n\n  addNewProject ({ commit, state}, newProject ){\n    axios.post('http://localhost:8000/admin/new_project', newProject)\n    .then( () => {\n      commit('addProject', newProject);\n    })\n  },\n\n  async fetchAllOpenProjects ({ rootState, commit }) {\n     const response = await axios('http://localhost:8000/student/projects')\n     .then(res => {\n       commit('setProjects', res.data)\n     })\n     .catch(err => console.log(err));\n  },\n\n  filterByRole ({rootState, commit}, role){\n    let filtered = rootState.projects.projects.filter(function(ele){\n      return ele.role_type.indexOf(role) !== -1;\n    })\n    commit('setProjects', filtered)\n  },\n  filterById ({rootState, commit}, id){\n    let project = rootState.projects.projects.filter(function(ele){\n      return ele.project_id === id;\n    })[0];\n    console.log('filtering for ', project)\n    commit('setCurrentProject', project);\n  }\n\n}\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n}\n"]}]}