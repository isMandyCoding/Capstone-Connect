{"remainingRequest":"/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/capstone_retry/node_modules/babel-loader/lib/index.js!/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/capstone_retry/node_modules/eslint-loader/index.js??ref--13-0!/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/capstone_retry/src/store/modules/messages.js","dependencies":[{"path":"/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/capstone_retry/src/store/modules/messages.js","mtime":1528447124363},{"path":"/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/capstone_retry/node_modules/cache-loader/dist/cjs.js","mtime":1528441485530},{"path":"/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/capstone_retry/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/capstone_retry/node_modules/eslint-loader/index.js","mtime":1519638534000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/capstone_retry/node_modules/@babel/runtime/helpers/builtin/es6/asyncToGenerator\";\nimport api from '../../api/imgur';\nimport qs from 'qs';\nimport { router } from '../../main';\nimport axios from 'axios';\nvar state = {\n  sent: [],\n  received: []\n};\nvar getters = {\n  getSent: function getSent(messages) {\n    return state.sent;\n  },\n  getReceived: function getReceived(messages) {\n    return state.received;\n  }\n};\nvar mutations = {\n  setSent: function setSent(state, messages) {\n    state.sent = messages; // console.log('state',state)\n    // console.log('messages', messages)\n    // console.log('sent', state.sent)\n    // console.log('role', role)\n  },\n  setReceived: function setReceived(state, messages) {\n    state.received = messages;\n  }\n};\nvar actions = {\n  fetchSentMessages: function () {\n    var _fetchSentMessages = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref) {\n      var rootState, commit, response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              rootState = _ref.rootState, commit = _ref.commit;\n              _context.next = 3;\n              return axios.get(\"http://localhost:8000/\".concat(rootState.auth.role, \"/messages/\").concat(rootState.auth.id)).then(function (res) {\n                var sent = res.data.length > 0 ? res.data.filter(function (ele) {\n                  console.log('ele', ele.sender_role);\n                  console.log('student role', rootState.auth.role);\n                  return ele.sender_role === rootState.auth.role;\n                }) : [];\n                commit('setSent', sent);\n              }).catch(function (err) {\n                return err;\n              });\n\n            case 3:\n              response = _context.sent;\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function fetchSentMessages(_x) {\n      return _fetchSentMessages.apply(this, arguments);\n    };\n  }(),\n  fetchReceivedMessages: function () {\n    var _fetchReceivedMessages = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(_ref2) {\n      var rootState, commit, response;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              rootState = _ref2.rootState, commit = _ref2.commit;\n              _context2.next = 3;\n              return axios.get(\"http://localhost:8000/\".concat(rootState.auth.role, \"/messages/\").concat(rootState.auth.id)).then(function (res) {\n                var received = res.data.length > 0 ? res.data.filter(function (ele) {\n                  return ele.sender_role !== rootState.auth.role;\n                }) : [];\n                commit('setReceived', received);\n              }).catch(function (err) {\n                return err;\n              });\n\n            case 3:\n              response = _context2.sent;\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    return function fetchReceivedMessages(_x2) {\n      return _fetchReceivedMessages.apply(this, arguments);\n    };\n  }()\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["src/store/modules/messages.js"],"names":["api","qs","router","axios","state","sent","received","getters","getSent","messages","getReceived","mutations","setSent","setReceived","actions","fetchSentMessages","rootState","commit","get","auth","role","id","then","res","data","length","filter","console","log","ele","sender_role","catch","err","response","fetchReceivedMessages"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,iBAAhB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,IAAMC,QAAQ;AACZC,QAAM,EADM;AAEZC,YAAU;AAFE,CAAd;AAKA,IAAMC,UAAU;AACZC,SADY,mBACJC,QADI,EACK;AACf,WAAOL,MAAMC,IAAb;AACD,GAHW;AAIZK,aAJY,uBAIAD,QAJA,EAIS;AACnB,WAAOL,MAAME,QAAb;AACD;AANW,CAAhB;AASA,IAAMK,YAAY;AAChBC,WAAS,iBAACR,KAAD,EAAQK,QAAR,EAAqB;AAC5BL,UAAMC,IAAN,GAAaI,QAAb,CAD4B,CAE5B;AACA;AACA;AACA;AACD,GAPe;AAQhBI,eAAa,qBAACT,KAAD,EAAQK,QAAR,EAAqB;AAChCL,UAAME,QAAN,GAAiBG,QAAjB;AACD;AAVe,CAAlB;AAaA,IAAMK,UAAU;AACRC,mBADQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACaC,uBADb,QACaA,SADb,EACwBC,MADxB,QACwBA,MADxB;AAAA;AAAA,qBAEYd,MAAMe,GAAN,iCAAmCF,UAAUG,IAAV,CAAeC,IAAlD,uBAAmEJ,UAAUG,IAAV,CAAeE,EAAlF,GACtBC,IADsB,CACjB,eAAO;AACX,oBAAIjB,OAAOkB,IAAIC,IAAJ,CAASC,MAAT,GAAkB,CAAlB,GAAsBF,IAAIC,IAAJ,CAASE,MAAT,CAAgB,eAAO;AACtDC,0BAAQC,GAAR,CAAY,KAAZ,EAAmBC,IAAIC,WAAvB;AACAH,0BAAQC,GAAR,CAAY,cAAZ,EAA4BZ,UAAUG,IAAV,CAAeC,IAA3C;AACA,yBAAOS,IAAIC,WAAJ,KAAoBd,UAAUG,IAAV,CAAeC,IAA1C;AACD,iBAJgC,CAAtB,GAIN,EAJL;AAMAH,uBAAO,SAAP,EAAkBZ,IAAlB;AACD,eATsB,EAUtB0B,KAVsB,CAUhB;AAAA,uBAAOC,GAAP;AAAA,eAVgB,CAFZ;;AAAA;AAELC,sBAFK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAeRC,uBAfQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeiBlB,uBAfjB,SAeiBA,SAfjB,EAe4BC,MAf5B,SAe4BA,MAf5B;AAAA;AAAA,qBAgBYd,MAAMe,GAAN,iCAAmCF,UAAUG,IAAV,CAAeC,IAAlD,uBAAmEJ,UAAUG,IAAV,CAAeE,EAAlF,GACtBC,IADsB,CACjB,eAAO;AACX,oBAAIhB,WAAWiB,IAAIC,IAAJ,CAASC,MAAT,GAAkB,CAAlB,GAAsBF,IAAIC,IAAJ,CAASE,MAAT,CAAgB;AAAA,yBAAOG,IAAIC,WAAJ,KAAoBd,UAAUG,IAAV,CAAeC,IAA1C;AAAA,iBAAhB,CAAtB,GAAwF,EAAvG;AACAH,uBAAO,aAAP,EAAsBX,QAAtB;AACD,eAJsB,EAKtByB,KALsB,CAKhB;AAAA,uBAAOC,GAAP;AAAA,eALgB,CAhBZ;;AAAA;AAgBLC,sBAhBK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;AA2BA,eAAe;AACb7B,cADa;AAEbG,kBAFa;AAGbO,kBAHa;AAIbH;AAJa,CAAf","sourceRoot":"/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/capstone_retry","sourcesContent":["import api from '../../api/imgur';\nimport qs from 'qs';\nimport { router } from '../../main';\nimport axios from 'axios';\n\n\nconst state = {\n  sent: [],\n  received: []\n};\n\nconst getters = {\n    getSent(messages){\n      return state.sent;\n    },\n    getReceived(messages){\n      return state.received;\n    },\n};\n\nconst mutations = {\n  setSent: (state, messages) => {\n    state.sent = messages;\n    // console.log('state',state)\n    // console.log('messages', messages)\n    // console.log('sent', state.sent)\n    // console.log('role', role)\n  },\n  setReceived: (state, messages) => {\n    state.received = messages;\n  }\n};\n\nconst actions = {\n  async fetchSentMessages ({ rootState, commit }) {\n     const response = await axios.get(`http://localhost:8000/${rootState.auth.role}/messages/${rootState.auth.id}`)\n     .then(res => {\n       let sent = res.data.length > 0 ? res.data.filter(ele => {\n         console.log('ele', ele.sender_role)\n         console.log('student role', rootState.auth.role)\n         return ele.sender_role === rootState.auth.role\n       }) : [];\n\n       commit('setSent', sent);\n     })\n     .catch(err => err);\n\n  },\n  async fetchReceivedMessages ({ rootState, commit }) {\n     const response = await axios.get(`http://localhost:8000/${rootState.auth.role}/messages/${rootState.auth.id}`)\n     .then(res => {\n       let received = res.data.length > 0 ? res.data.filter(ele => ele.sender_role !== rootState.auth.role) : [];\n       commit('setReceived', received);\n     })\n     .catch(err => err);\n\n  }\n\n}\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n}\n"]}]}