{"remainingRequest":"/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/capstone_retry/node_modules/babel-loader/lib/index.js!/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/capstone_retry/node_modules/eslint-loader/index.js??ref--13-0!/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/capstone_retry/src/store/modules/images.js","dependencies":[{"path":"/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/capstone_retry/src/store/modules/images.js","mtime":1528494480987},{"path":"/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/capstone_retry/node_modules/cache-loader/dist/cjs.js","mtime":1528441485530},{"path":"/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/capstone_retry/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/capstone_retry/node_modules/eslint-loader/index.js","mtime":1519638534000}],"contextDependencies":[],"result":["import api from '../../api/imgur';\nimport qs from 'qs';\nimport { router } from '../../main';\nvar state = {\n  images: []\n};\nvar getters = {\n  allImages: function allImages(state) {\n    return state.images;\n  }\n};\nvar mutations = {\n  setImages: function setImages(state, images) {\n    state.images = images;\n  }\n};\nvar actions = {// async fetchImages ({ rootState, commit }) {\n  //    const { token } = rootState.auth;\n  //    const response = await api.fetchImages(token);\n  //    commit('setImages', response.data.data)\n  // },\n  // async uploadImages({ rootState }, images){\n  //   const { token } = rootState.auth;\n  //\n  //   await api.uploadImages(images, token);\n  //\n  //   router.push('/');\n  // }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["src/store/modules/images.js"],"names":["api","qs","router","state","images","getters","allImages","mutations","setImages","actions"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,iBAAhB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAASC,MAAT,QAAuB,YAAvB;AAGA,IAAMC,QAAQ;AACZC,UAAQ;AADI,CAAd;AAIA,IAAMC,UAAU;AACZC,aAAW,mBAAUH,KAAV,EAAiB;AAC1B,WAAOA,MAAMC,MAAb;AACD;AAHW,CAAhB;AAMA,IAAMG,YAAY;AAChBC,aAAW,mBAACL,KAAD,EAAQC,MAAR,EAAmB;AAC3BD,UAAMC,MAAN,GAAeA,MAAf;AACF;AAHe,CAAlB;AAMA,IAAMK,UAAU,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZc,CAAhB;AAeA,eAAe;AACbN,cADa;AAEbE,kBAFa;AAGbI,kBAHa;AAIbF;AAJa,CAAf","sourceRoot":"/Users/catherineluse/Documents/workspace/unit-4/capstone-connect/capstone_retry","sourcesContent":["import api from '../../api/imgur';\nimport qs from 'qs';\nimport { router } from '../../main';\n\n\nconst state = {\n  images: []\n};\n\nconst getters = {\n    allImages: function (state) {\n      return state.images;\n    }\n};\n\nconst mutations = {\n  setImages: (state, images) => {\n     state.images = images;\n  }\n};\n\nconst actions = {\n  // async fetchImages ({ rootState, commit }) {\n  //    const { token } = rootState.auth;\n  //    const response = await api.fetchImages(token);\n  //    commit('setImages', response.data.data)\n  // },\n  // async uploadImages({ rootState }, images){\n  //   const { token } = rootState.auth;\n  //\n  //   await api.uploadImages(images, token);\n  //\n  //   router.push('/');\n  // }\n}\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n}\n"]}]}